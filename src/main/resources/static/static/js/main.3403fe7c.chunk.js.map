{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/project/ProjectItem.js","components/project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","reportWebVitals.js","index.js"],"names":["createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","Link","to","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","key","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","Route","render","Redirect","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Switch","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3403fe7c.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECT, GET_PROJECTS, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type:GET_ERRORS,\r\n      payload:{}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try{\r\n  const res = await axios.get(`/api/project/${id}`);\r\n  dispatch({\r\n    type: GET_PROJECT,\r\n    payload: res.data\r\n  });\r\n}catch (error) {\r\n  history.push('/dashboard');\r\n}\r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      \"Are you sure? This will delete the project and all the data related to it\"\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id\r\n    });\r\n  }\r\n\r\n};","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n//Types of BACKLOG ACTIONS\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteProject }\r\n)(ProjectItem);","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./project/ProjectItem\";\r\nimport CreateProjectButton from \"./project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n\r\n              <br />\r\n              <hr />\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjects }\r\n)(Dashboard);","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  });\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n  try {\r\n    // post => Login Request\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n    // extract token from res.data\r\n    const { token } = res.data;\r\n    // store the token in the localStorage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    // set our token in header ***\r\n    setJWTToken(token);\r\n    // decode token on React\r\n    const decoded = jwt_decode(token);\r\n    // dispatch to our securityReducer\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.fullName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logout }\r\n)(Header);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectName\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectIdentifier\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.description\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_date\"\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProject }\r\n)(AddProject);","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          project => project.projectIdentifier !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload\r\n      };\r\n\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload\r\n      };\r\n\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          project_task => project_task.projectSequence !== action.payload\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  validToken: false,\r\n  user: {}\r\n};\r\n\r\nconst booleanActionPayload = payload => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security:securityReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initalState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\nwindow.__REDUX_DEVTOOLS_EXTENSION__()\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\")&&(ReactReduxDevTools)) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n       ReactReduxDevTools\r\n    )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  //set state\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.description}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProject, createProject }\r\n)(UpdateProject);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n\r\n    if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n\r\n    if (project_task.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${\r\n              project_task.projectSequence\r\n            }`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired\r\n};\r\nexport default connect(\r\n  null,\r\n  { deleteProjectTask }\r\n)(ProjectTask);","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"./types\";\r\n\r\n//Fix bug with priority in Spring Boot Server, needs to check null first\r\nexport const addProjectTask = (\r\n  backlog_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      `You are deleting project task ${pt_id}, this action cannot be undone`\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: pt_id\r\n    });\r\n  }\r\n};","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks_prop } = this.props;\r\n\r\n    const tasks = project_tasks_prop.map(project_task => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n        todoItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n        inProgressItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.project_task.status === \"DONE\") {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n            {\r\n              // insert tasks here\r\n            }\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n  //constructor to handle errors\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        }else{\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Project Tasks on this board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks_prop={project_tasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getBacklog }\r\n)(ProjectBoard);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  // on change\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  //on submit\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate\r\n    };\r\n\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addProjectTask }\r\n)(AddProjectTask);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      create_At: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const UpdateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      create_At: this.state.create_At\r\n    };\r\n\r\n    // console.log(UpdateProjectTask);\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      UpdateProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\r\n                {this.state.projectSequence}{\" \"}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjectTask, updateProjectTask }\r\n)(UpdateProjectTask);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects or start your own\r\n                </p>\r\n                <hr />\r\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullName\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address (Username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security:state.security\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createNewUser }\r\n)(Register);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.login(LoginRequest);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login }\r\n)(Login);","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              //Public Routes\n            }\n\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n\n            {\n              //Private Routes\n            }\n            <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n              <SecuredRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SecuredRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecuredRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecuredRoute\n                exact\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}